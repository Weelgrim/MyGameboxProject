Структура классов

  GameManager
    Описание: Отвечает за управление состоянием игры, подсчет очков и жизней игрока, а также за спавн метеоров.
    Основные методы и свойства:
      Instance: Статическое свойство, обеспечивающее доступ к экземпляру GameManager.
      scoreText, livesText: Тексты UI для отображения очков и жизней.
      arcMeteorPrefab, explodingMeteorPrefab: Префабы метеоров.
      spawnRate: Частота спавна метеоров.
      scrollingBackground: Объект фона, который скроллируется.
      AddScore(int points): Увеличивает очки на указанное количество.
      LoseLife(): Уменьшает количество жизней на одну.
      GameOver(): Завершает игру и загружает меню.
      SpawnMeteor(): Спавнит метеоры в случайных позициях.
      UpdateLivesText(): Обновляет текст, отображающий количество жизней.
      AdjustGameDifficulty(): Регулирует сложность игры по мере увеличения очков.

  GameController
    Описание: Управляет началом игры и скрытием стартовой панели.
    Основные методы:
      Start(): Останавливает время и активирует стартовую панель.
      StartGame(): Запускает игру, скрывая стартовую панель и продолжая время.

  PlayerController
    Описание: Управляет движением и стрельбой игрока.
    Основные методы и свойства:
      speed: Скорость движения игрока.
      bulletPrefab: Префаб пули.
      bulletSpawn: Точка спавна пули.
      fireRate: Частота стрельбы.
      HandleMovement(): Обрабатывает движение игрока.
      HandleShooting(): Обрабатывает стрельбу.
      HandleControlSwitch(): Переключает режим управления между мышью и клавиатурой.
      ClampPosition(): Ограничивает позицию игрока в пределах экрана.
      Shoot(): Спавнит пулю.

  MainMenuController
    Описание: Управляет переходом из главного меню в игровую сцену.
    Основные методы:
      StartGame(): Загружает игровую сцену.

  Meteor
    Описание: Базовый класс для метеоров.
    Основные методы и свойства:
      speed: Скорость метеора.
      Rb: Rigidbody метеора.
      player: Трансформ игрока.
      OnHitByBullet(): Обрабатывает попадание пули в метеор.
      OnTriggerEnter2D(Collider2D other): Обрабатывает столкновения с игроком и пулями.

  ArcMeteor
    Описание: Наследуется от Meteor. Метеор, который следует за игроком и взрывается по таймеру.
    Основные методы и свойства:
      explosionRadius: Радиус взрыва.
      explosionEffectPrefab: Префаб эффекта взрыва.
      TimeToSelfDestruct: Время до самоуничтожения.
      Explode(): Обрабатывает взрыв метеора.
      SelfDestruct(): Инициирует самоуничтожение.

  ExplodingMeteor
    Описание: Наследуется от Meteor. Метеор, который при уничтожении разбрасывает осколки.
    Основные методы и свойства:
      shardPrefab: Префаб осколков.
      numberOfShards: Количество осколков.
      Explode(): Обрабатывает разбрасывание осколков.

  Shard
    Описание: Класс для осколков, которые остаются после взрыва ExplodingMeteor.
    Основные методы:
      Start(): Уничтожает осколок через 2 секунды после появления.
      OnTriggerEnter2D(Collider2D other): Обрабатывает столкновение с игроком.

  Bullet
    Описание: Класс для пули, выпущенной игроком.
    Основные методы:
      speed: Скорость пули.
      Update(): Двигает пулю вверх и уничтожает её, если она выходит за пределы экрана.

Взаимодействие классов

  GameManager: Управляет игровым процессом, контролирует очки и жизни, а также спавн метеоров. Взаимодействует с Meteor, ArcMeteor, ExplodingMeteor, обновляет UI с помощью scoreText и livesText.

  PlayerController: Управляет движением и стрельбой игрока, взаимодействует с Bullet.

  MainMenuController: Переходит между сценами.

  Meteor, ArcMeteor, ExplodingMeteor: Реализуют поведение метеоров. Взаимодействуют с игроком (PlayerController) и пулями (Bullet), обновляют очки и жизни через GameManager.

  Shard: Реализует поведение осколков метеоров, взаимодействует с игроком.

  Bullet: Реализует поведение пуль, взаимодействует с метеорами (Meteor).
